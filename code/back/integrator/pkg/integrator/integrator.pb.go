// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v5.28.0
// source: integrator.proto

package integrator

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Specification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name      string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Content   string                 `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"` // YAML content
	GitPath   string                 `protobuf:"bytes,4,opt,name=git_path,json=gitPath,proto3" json:"git_path,omitempty"`
	Status    string                 `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"`
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *Specification) Reset() {
	*x = Specification{}
	mi := &file_integrator_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Specification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Specification) ProtoMessage() {}

func (x *Specification) ProtoReflect() protoreflect.Message {
	mi := &file_integrator_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Specification.ProtoReflect.Descriptor instead.
func (*Specification) Descriptor() ([]byte, []int) {
	return file_integrator_proto_rawDescGZIP(), []int{0}
}

func (x *Specification) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Specification) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Specification) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *Specification) GetGitPath() string {
	if x != nil {
		return x.GitPath
	}
	return ""
}

func (x *Specification) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Specification) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Specification) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type CommitPushResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommitHash string `protobuf:"bytes,1,opt,name=commit_hash,json=commitHash,proto3" json:"commit_hash,omitempty"`
	IsSuccess  bool   `protobuf:"varint,2,opt,name=is_success,json=isSuccess,proto3" json:"is_success,omitempty"`
}

func (x *CommitPushResult) Reset() {
	*x = CommitPushResult{}
	mi := &file_integrator_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommitPushResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommitPushResult) ProtoMessage() {}

func (x *CommitPushResult) ProtoReflect() protoreflect.Message {
	mi := &file_integrator_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommitPushResult.ProtoReflect.Descriptor instead.
func (*CommitPushResult) Descriptor() ([]byte, []int) {
	return file_integrator_proto_rawDescGZIP(), []int{1}
}

func (x *CommitPushResult) GetCommitHash() string {
	if x != nil {
		return x.CommitHash
	}
	return ""
}

func (x *CommitPushResult) GetIsSuccess() bool {
	if x != nil {
		return x.IsSuccess
	}
	return false
}

type MLDevResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsSuccess bool     `protobuf:"varint,1,opt,name=is_success,json=isSuccess,proto3" json:"is_success,omitempty"`
	Artifacts []string `protobuf:"bytes,2,rep,name=artifacts,proto3" json:"artifacts,omitempty"`
}

func (x *MLDevResult) Reset() {
	*x = MLDevResult{}
	mi := &file_integrator_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MLDevResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MLDevResult) ProtoMessage() {}

func (x *MLDevResult) ProtoReflect() protoreflect.Message {
	mi := &file_integrator_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MLDevResult.ProtoReflect.Descriptor instead.
func (*MLDevResult) Descriptor() ([]byte, []int) {
	return file_integrator_proto_rawDescGZIP(), []int{2}
}

func (x *MLDevResult) GetIsSuccess() bool {
	if x != nil {
		return x.IsSuccess
	}
	return false
}

func (x *MLDevResult) GetArtifacts() []string {
	if x != nil {
		return x.Artifacts
	}
	return nil
}

type GetSpecificationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetSpecificationRequest) Reset() {
	*x = GetSpecificationRequest{}
	mi := &file_integrator_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSpecificationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSpecificationRequest) ProtoMessage() {}

func (x *GetSpecificationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_integrator_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSpecificationRequest.ProtoReflect.Descriptor instead.
func (*GetSpecificationRequest) Descriptor() ([]byte, []int) {
	return file_integrator_proto_rawDescGZIP(), []int{3}
}

func (x *GetSpecificationRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type SaveSpecificationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int64          `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Specification *Specification `protobuf:"bytes,2,opt,name=specification,proto3" json:"specification,omitempty"`
}

func (x *SaveSpecificationRequest) Reset() {
	*x = SaveSpecificationRequest{}
	mi := &file_integrator_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SaveSpecificationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveSpecificationRequest) ProtoMessage() {}

func (x *SaveSpecificationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_integrator_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveSpecificationRequest.ProtoReflect.Descriptor instead.
func (*SaveSpecificationRequest) Descriptor() ([]byte, []int) {
	return file_integrator_proto_rawDescGZIP(), []int{4}
}

func (x *SaveSpecificationRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SaveSpecificationRequest) GetSpecification() *Specification {
	if x != nil {
		return x.Specification
	}
	return nil
}

type RunMLDevRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int64      `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Path *MLDevPath `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *RunMLDevRequest) Reset() {
	*x = RunMLDevRequest{}
	mi := &file_integrator_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RunMLDevRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunMLDevRequest) ProtoMessage() {}

func (x *RunMLDevRequest) ProtoReflect() protoreflect.Message {
	mi := &file_integrator_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunMLDevRequest.ProtoReflect.Descriptor instead.
func (*RunMLDevRequest) Descriptor() ([]byte, []int) {
	return file_integrator_proto_rawDescGZIP(), []int{5}
}

func (x *RunMLDevRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RunMLDevRequest) GetPath() *MLDevPath {
	if x != nil {
		return x.Path
	}
	return nil
}

type MLDevPath struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *MLDevPath) Reset() {
	*x = MLDevPath{}
	mi := &file_integrator_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MLDevPath) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MLDevPath) ProtoMessage() {}

func (x *MLDevPath) ProtoReflect() protoreflect.Message {
	mi := &file_integrator_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MLDevPath.ProtoReflect.Descriptor instead.
func (*MLDevPath) Descriptor() ([]byte, []int) {
	return file_integrator_proto_rawDescGZIP(), []int{6}
}

func (x *MLDevPath) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type GetHelloRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetHelloRequest) Reset() {
	*x = GetHelloRequest{}
	mi := &file_integrator_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetHelloRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHelloRequest) ProtoMessage() {}

func (x *GetHelloRequest) ProtoReflect() protoreflect.Message {
	mi := &file_integrator_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHelloRequest.ProtoReflect.Descriptor instead.
func (*GetHelloRequest) Descriptor() ([]byte, []int) {
	return file_integrator_proto_rawDescGZIP(), []int{7}
}

type GetHelloResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *GetHelloResponse) Reset() {
	*x = GetHelloResponse{}
	mi := &file_integrator_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetHelloResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHelloResponse) ProtoMessage() {}

func (x *GetHelloResponse) ProtoReflect() protoreflect.Message {
	mi := &file_integrator_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHelloResponse.ProtoReflect.Descriptor instead.
func (*GetHelloResponse) Descriptor() ([]byte, []int) {
	return file_integrator_proto_rawDescGZIP(), []int{8}
}

func (x *GetHelloResponse) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

var File_integrator_proto protoreflect.FileDescriptor

var file_integrator_proto_rawDesc = []byte{
	0x0a, 0x10, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x0a, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x1a, 0x1c,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xf6, 0x01,
	0x0a, 0x0d, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x19, 0x0a,
	0x08, 0x67, 0x69, 0x74, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x67, 0x69, 0x74, 0x50, 0x61, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x52, 0x0a, 0x10, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74,
	0x50, 0x75, 0x73, 0x68, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f,
	0x6d, 0x6d, 0x69, 0x74, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x48, 0x61, 0x73, 0x68, 0x12, 0x1d, 0x0a, 0x0a, 0x69,
	0x73, 0x5f, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x09, 0x69, 0x73, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x4a, 0x0a, 0x0b, 0x4d, 0x4c,
	0x44, 0x65, 0x76, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69,
	0x73, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x72, 0x74, 0x69,
	0x66, 0x61, 0x63, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x61, 0x72, 0x74,
	0x69, 0x66, 0x61, 0x63, 0x74, 0x73, 0x22, 0x29, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x53, 0x70, 0x65,
	0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x22, 0x6b, 0x0a, 0x18, 0x53, 0x61, 0x76, 0x65, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x3f, 0x0a,
	0x0d, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x6f,
	0x72, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x0d, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x4c,
	0x0a, 0x0f, 0x52, 0x75, 0x6e, 0x4d, 0x4c, 0x44, 0x65, 0x76, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x29, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x4d, 0x4c, 0x44,
	0x65, 0x76, 0x50, 0x61, 0x74, 0x68, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x22, 0x1f, 0x0a, 0x09,
	0x4d, 0x4c, 0x44, 0x65, 0x76, 0x50, 0x61, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74,
	0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x22, 0x11, 0x0a,
	0x0f, 0x47, 0x65, 0x74, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x22, 0x26, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x32, 0xdf, 0x03, 0x0a, 0x0d, 0x57, 0x6f, 0x72,
	0x6b, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x81, 0x01, 0x0a, 0x11, 0x53,
	0x61, 0x76, 0x65, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x24, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x53, 0x61,
	0x76, 0x65, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61,
	0x74, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x50, 0x75, 0x73, 0x68, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x22, 0x28, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x22, 0x22, 0x20, 0x2f, 0x77,
	0x6f, 0x72, 0x6b, 0x65, 0x72, 0x2f, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x2f, 0x73, 0x61, 0x76, 0x65, 0x12, 0x6f,
	0x0a, 0x08, 0x52, 0x75, 0x6e, 0x4d, 0x4c, 0x44, 0x65, 0x76, 0x12, 0x1b, 0x2e, 0x69, 0x6e, 0x74,
	0x65, 0x67, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x52, 0x75, 0x6e, 0x4d, 0x4c, 0x44, 0x65, 0x76,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72,
	0x61, 0x74, 0x6f, 0x72, 0x2e, 0x4d, 0x4c, 0x44, 0x65, 0x76, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x22, 0x2d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x27, 0x22, 0x25, 0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x65,
	0x72, 0x2f, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x2f, 0x72, 0x75, 0x6e, 0x2d, 0x6d, 0x6c, 0x64, 0x65, 0x76, 0x12,
	0x82, 0x01, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x46, 0x72, 0x6f, 0x6d, 0x47, 0x69, 0x74, 0x12, 0x23, 0x2e, 0x69, 0x6e,
	0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x70, 0x65, 0x63,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x19, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x53, 0x70,
	0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x27, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x21, 0x12, 0x1f, 0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x2f, 0x73, 0x70, 0x65,
	0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d,
	0x2f, 0x67, 0x65, 0x74, 0x12, 0x54, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x48, 0x65, 0x6c, 0x6c, 0x6f,
	0x12, 0x1b, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x47, 0x65,
	0x74, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e,
	0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x48, 0x65,
	0x6c, 0x6c, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x0d, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x07, 0x12, 0x05, 0x2f, 0x70, 0x69, 0x6e, 0x67, 0x42, 0x1c, 0x5a, 0x1a, 0x67, 0x61,
	0x74, 0x65, 0x77, 0x61, 0x79, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x69, 0x6e,
	0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_integrator_proto_rawDescOnce sync.Once
	file_integrator_proto_rawDescData = file_integrator_proto_rawDesc
)

func file_integrator_proto_rawDescGZIP() []byte {
	file_integrator_proto_rawDescOnce.Do(func() {
		file_integrator_proto_rawDescData = protoimpl.X.CompressGZIP(file_integrator_proto_rawDescData)
	})
	return file_integrator_proto_rawDescData
}

var file_integrator_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_integrator_proto_goTypes = []any{
	(*Specification)(nil),            // 0: integrator.Specification
	(*CommitPushResult)(nil),         // 1: integrator.CommitPushResult
	(*MLDevResult)(nil),              // 2: integrator.MLDevResult
	(*GetSpecificationRequest)(nil),  // 3: integrator.GetSpecificationRequest
	(*SaveSpecificationRequest)(nil), // 4: integrator.SaveSpecificationRequest
	(*RunMLDevRequest)(nil),          // 5: integrator.RunMLDevRequest
	(*MLDevPath)(nil),                // 6: integrator.MLDevPath
	(*GetHelloRequest)(nil),          // 7: integrator.GetHelloRequest
	(*GetHelloResponse)(nil),         // 8: integrator.GetHelloResponse
	(*timestamppb.Timestamp)(nil),    // 9: google.protobuf.Timestamp
}
var file_integrator_proto_depIdxs = []int32{
	9, // 0: integrator.Specification.created_at:type_name -> google.protobuf.Timestamp
	9, // 1: integrator.Specification.updated_at:type_name -> google.protobuf.Timestamp
	0, // 2: integrator.SaveSpecificationRequest.specification:type_name -> integrator.Specification
	6, // 3: integrator.RunMLDevRequest.path:type_name -> integrator.MLDevPath
	4, // 4: integrator.WorkerService.SaveSpecification:input_type -> integrator.SaveSpecificationRequest
	5, // 5: integrator.WorkerService.RunMLDev:input_type -> integrator.RunMLDevRequest
	3, // 6: integrator.WorkerService.GetSpecificationFromGit:input_type -> integrator.GetSpecificationRequest
	7, // 7: integrator.WorkerService.GetHello:input_type -> integrator.GetHelloRequest
	1, // 8: integrator.WorkerService.SaveSpecification:output_type -> integrator.CommitPushResult
	2, // 9: integrator.WorkerService.RunMLDev:output_type -> integrator.MLDevResult
	0, // 10: integrator.WorkerService.GetSpecificationFromGit:output_type -> integrator.Specification
	8, // 11: integrator.WorkerService.GetHello:output_type -> integrator.GetHelloResponse
	8, // [8:12] is the sub-list for method output_type
	4, // [4:8] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_integrator_proto_init() }
func file_integrator_proto_init() {
	if File_integrator_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_integrator_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_integrator_proto_goTypes,
		DependencyIndexes: file_integrator_proto_depIdxs,
		MessageInfos:      file_integrator_proto_msgTypes,
	}.Build()
	File_integrator_proto = out.File
	file_integrator_proto_rawDesc = nil
	file_integrator_proto_goTypes = nil
	file_integrator_proto_depIdxs = nil
}
